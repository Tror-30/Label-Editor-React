{"ast":null,"code":"import { parsingLogo, parsingString, parsingBarcode } from \"./function-parsing.js\";\nimport { logoChoice, сleanTheTag, addLogoName, modifietOff, set, ports, set2 } from \"../Components/function-row.js\";\nimport { constructorlabelCode, numberTagsBack } from \"./function-constructor-code.js\";\nimport { controlGetAutoPrint } from \"./Sections/User/function-user-section.js\";\nimport { closeError } from \"./Alert-Errors/function-error.js\";\n//! Функции отвечающие за работу с Бекендом\n//* \nexport async function definition(codelabel) {\n  let top;\n  let left;\n  let strCod;\n  let xName;\n  let xPosition;\n  let stringCode = /\\^FO\\w+?.*?\\^FS/m.exec(codelabel)[0]; //? Вырезаем строку\n  if (stringCode.includes('^GFA')) {\n    //? Проверяем на наличие ^GFA в строке\n    //* Распарсим позицию логотипа\n    [strCod, top, left] = parsingLogo(stringCode);\n    let objectNameRotation = await fetchNameLogo(strCod);\n    xName = objectNameRotation.name; //? Имя логотипа\n    xPosition = objectNameRotation.rotation; //? Позиция поворота логотипа\n    if (xPosition === '0') {\n      //? Определяем поворот логотипа\n      xPosition = 'rotate(0deg)';\n    } else if (xPosition === '90') {\n      xPosition = 'rotate(90deg)';\n    } else if (xPosition === '180') {\n      xPosition = 'rotate(180deg)';\n    } else if (xPosition === '270') {\n      xPosition = 'rotate(270deg)';\n    } else {\n      xPosition = 'rotate(0deg)';\n    }\n    ;\n    let logoType = await logoNameBak(); //? Получаем весь список имён имеющихся логотипов\n    for (let j = 0; j < logoType.length; j++) {\n      //? Берём каждое имя логотипа\n      let name = logoType[j].name; //? Берём параметр имени без номера\n      if (xName === name) {\n        //? Сравниваем имена\n        await logoChoice(xName, xPosition, top, left); //? Вызов вставки логотипа\n        break;\n      }\n      ;\n    }\n    ;\n    codelabel = codelabel.replace(stringCode, ''); //? Удаляем строку из бирки\n  } else if (stringCode.includes('^A@R')) {\n    parsingString(stringCode); //? Вызываем функцию разбора строки\n    codelabel = codelabel.replace(stringCode, ''); //? Удаляем строку из бирки\n  } else if (stringCode.includes('^BY')) {\n    parsingBarcode(stringCode); //? Вставим штрихкод\n    codelabel = codelabel.replace(stringCode, ''); //? Удаляем строку из бирки\n  } else {\n    codelabel = codelabel.replace(stringCode, ''); //? Удаляем строку из бирки\n  }\n  ;\n  modifietOff();\n  return codelabel;\n}\n;\n//* Функция определения логотипа в бирке\nexport async function fetchNameLogo(strCod) {\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let stan = stanTarget();\n  let lnr;\n  try {\n    strCod = strCod.substr(1, 90);\n    lnr = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogoFromCode`, {\n      method: 'post',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        body: strCod\n      })\n    });\n    lnr = await lnr.json();\n  } catch (ex) {\n    errorText.innerText = 'Ошибка:\\nНе удалось определить логотип!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n    return;\n  }\n  ;\n  closeError();\n  return lnr;\n}\n;\n//* \nexport async function fetchLabel(text) {\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let x;\n  let y;\n  let stan = stanTarget();\n  text = text + '.ini';\n  try {\n    text = encodeURI(text);\n    x = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/labelZebraCode?fileName=` + text, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      }\n    });\n    y = await x.text();\n  } catch {\n    errorText.innerText = 'Ошибка:\\nВы не получаете код Бирки!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n    return;\n  }\n  ;\n  closeError();\n  return y;\n}\n;\n//* Функция запроса и получения кода бирки из бека\nexport async function labelCode(text) {\n  let codelabel = await fetchLabel(text);\n  сleanTheTag(); //? Очищаем бирку\n  codelabel = codelabel.replace(/.*?\\^PQ/, '^PQ');\n  let numberOfTags = /\\^PQ\\w+?.*?\\Y/m.exec(codelabel)[0];\n  numberTagsBack(numberOfTags);\n  codelabel = codelabel.replace(/.*?\\^FO/, '^FO'); //? Удаляем всё до логотипа\n  for (let i of codelabel) {\n    //? Цикл вырезки строк\n    if (!codelabel) {\n      //? Проверка на отсутствие данных и выход из цикла\n      break;\n    } else if (!codelabel.includes('^FO')) {\n      break;\n    }\n    ;\n    codelabel = await definition(codelabel);\n  }\n  ;\n}\n;\n//* Функция получения из бека имён логотипов\nexport async function logoNameBak() {\n  let nameLogo;\n  let stan = stanTarget();\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  try {\n    //? Проверка на Критическую ошибку\n    nameLogo = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogosOptions`, {\n      //? Получаем с бека объект имён логотипов\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      }\n    });\n    nameLogo = await nameLogo.json();\n    addLogoName(nameLogo);\n  } catch (err) {\n    errorText.innerText = 'Ошибка:\\nВы не получаете данные о списке логотипов!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n  }\n  ;\n  closeError();\n  return nameLogo;\n}\n;\n//* Функция запроса и получения кода логотипа из бека\nexport async function logoCodeRevers(firstLogo, transform) {\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let number = '0';\n  let logoCodeString;\n  if (transform === '' & transform === 'rotate(0deg)') {\n    number = \"0\";\n  } else if (transform === 'rotate(90deg)') {\n    number = \"90\";\n  } else if (transform === 'rotate(180deg)') {\n    number = \"180\";\n  } else if (transform === 'rotate(270deg)') {\n    number = \"270\";\n  }\n  ;\n  firstLogo = firstLogo.split('logo_').join('');\n  let stan = stanTarget();\n  try {\n    let y = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogoZebraCode?fileName=` + firstLogo + '&rotation=' + number, {\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      }\n    });\n    logoCodeString = await y.text();\n  } catch {\n    errorText.innerText = 'Вы не получаете данные (Код логотипа)!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n  }\n  ;\n  closeError();\n  return logoCodeString;\n}\n;\n//* Функция определения жирности шрифта строки с бека\nexport function boldFont(position) {\n  let bold;\n  if (position === '^A0R,' && position === '^A0I,' && position === '^A0B,' && position === '^A0N,') {\n    bold = 'bolder';\n  } else {\n    bold = 'normal';\n  }\n  ;\n  return bold;\n}\n;\n//* Функция определения Шрифта из бека\nexport function sizeString(size) {\n  if (size === '30,20') {\n    return \"16px\";\n  } else if (size === '40,30') {\n    return '18px';\n  } else if (size === '50,40') {\n    return '20px';\n  } else if (size === '60,50') {\n    return '22px';\n  } else {\n    return '20px';\n  }\n  ;\n}\n;\n//* Функция Определения стана при загрузке(Default)\nexport async function defaultLabelNameStan() {\n  document.getElementById('350-Stan').style.background = 'red';\n  let stan = '350-Stan';\n  await labelName(stan);\n  await logoNameBak(stan);\n}\n;\n//* Функция получения имён бирок из Бека\nexport async function labelName() {\n  let namelabel;\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let stan = stanTarget();\n  try {\n    //? Проверка на Критическую ошибку\n    document.querySelector('.option-history').innerHTML = '';\n    namelabel = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/labelsOptions`, {\n      //? Получаем с бека список имён\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      }\n    });\n  } catch {\n    errorText.innerText = 'Ошибка:\\nВы не получаете данные о списке Бирок!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n    return;\n  }\n  ;\n  closeError();\n  let label = await namelabel.json();\n  for (let i = 0; i < label.length; i++) {\n    //? Присвоим i каждое имя по очереди\n    let labelname = label[i].name; //? Берём параметр имени без номера\n    labelname = labelname.replace('.ini', '');\n    addlabelNameSelection(labelname); //? Передаём в селект\n  }\n  ;\n}\n;\n//* Функция добавления имён Бирок в селек истории\nexport function addlabelNameSelection(labelname) {\n  let stan = stanTarget();\n  let ul = document.querySelector('.option-history'); //? Получаем блок списка\n  let li = document.createElement('li'); //? Создаём новый элемент списка\n  li.className = stan;\n  li.appendChild(document.createTextNode(labelname)); //? Привсаиваем ему значение\n  ul.appendChild(li); //? Вставляем в блок списка\n}\n;\nexport function alertAutoHandPrint() {\n  let stan = stanTarget();\n  let alertBlock = document.getElementById('alert-printAuto');\n  alertBlock.style.display = 'block';\n  if (stan === '350-Stan') {\n    document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 350-Стан?';\n  } else if (stan === '210-Stan') {\n    document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 210-Стан?';\n  } else if (stan === '212-Stan') {\n    document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 212-Стан?';\n  }\n  ;\n}\n;\n//* Функция Подтверждения отправки на печать ручную печать\nexport function alertHandPrint() {\n  let stan = stanTarget();\n  let alertBlock = document.getElementById('alert-print');\n  alertBlock.style.display = 'block';\n  if (stan === '350-Stan') {\n    document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 350-Стан?';\n  } else if (stan === '210-Stan') {\n    document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 210-Стан?';\n  } else if (stan === '212-Stan') {\n    document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 212-Стан?';\n  }\n  ;\n}\n;\n//* Функция Авто Печати\nexport async function autoHandPrint() {\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let namelabel = document.getElementById('name-history-label').value;\n  let labelCode = await constructorlabelCode();\n  let stan = stanTarget();\n  try {\n    await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/ChangePattern?OnSKS=true`, {\n      method: 'post',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        body: labelCode\n      })\n    });\n  } catch {\n    document.getElementById('text-error').innerText = 'Ошибка:\\nНе удалось отправить на печать!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n  }\n  ;\n  let dataTime = new Date();\n  let controlDate = dataTime.getDate + dataTime.getMonth() + dataTime.getFullYear();\n  let controlTime = dataTime.getHours() + dataTime.getMinutes() + dataTime.getSeconds();\n  let controlAutoPrintLabel = {\n    Stan: stan,\n    NameLabel: namelabel,\n    Date: dataTime.toISOString(),\n    CodeLabel: labelCode\n  };\n  closeError();\n  controlGetAutoPrint(stan, controlDate, controlTime, namelabel);\n}\n;\n//* Функция Ручная печать\nexport async function handPrint() {\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  let labelCode = await constructorlabelCode();\n  let stan = stanTarget();\n  try {\n    await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/ChangePattern?OnSKS=false`, {\n      method: 'post',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        body: labelCode\n      })\n    });\n  } catch {\n    errorText.innerText = 'Ошибка:\\nНе удалось отправить на печать!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n  }\n  ;\n  closeError();\n}\n;\n//* Функция Определения стана\nexport function stanTarget() {\n  let idStan;\n  let blockChild = document.querySelector('#Stans').children; //? Получим массив дочерних элементов\n  for (let h = 0; h < blockChild.length; h++) {\n    let divBlock = blockChild[h]; //? Возьмём один из дочерних элементов\n    if (divBlock.style.background === 'red') {\n      idStan = divBlock.id;\n    }\n    ;\n  }\n  ;\n  return idStan;\n}\n;","map":{"version":3,"names":["parsingLogo","parsingString","parsingBarcode","logoChoice","сleanTheTag","addLogoName","modifietOff","set","ports","set2","constructorlabelCode","numberTagsBack","controlGetAutoPrint","closeError","definition","codelabel","top","left","strCod","xName","xPosition","stringCode","exec","includes","objectNameRotation","fetchNameLogo","name","rotation","logoType","logoNameBak","j","length","replace","error","document","getElementById","errorText","stan","stanTarget","lnr","substr","fetch","method","headers","body","JSON","stringify","json","ex","innerText","style","display","fetchLabel","text","x","y","encodeURI","labelCode","numberOfTags","i","nameLogo","err","logoCodeRevers","firstLogo","transform","number","logoCodeString","split","join","boldFont","position","bold","sizeString","size","defaultLabelNameStan","background","labelName","namelabel","querySelector","innerHTML","label","labelname","addlabelNameSelection","ul","li","createElement","className","appendChild","createTextNode","alertAutoHandPrint","alertBlock","alertHandPrint","autoHandPrint","value","dataTime","Date","controlDate","getDate","getMonth","getFullYear","controlTime","getHours","getMinutes","getSeconds","controlAutoPrintLabel","Stan","NameLabel","toISOString","CodeLabel","handPrint","idStan","blockChild","children","h","divBlock","id"],"sources":["C:/Users/Tror/Desktop/Project/Label-Editor-React/src/Components/function-backand-editor.js"],"sourcesContent":["\r\nimport { parsingLogo, parsingString, parsingBarcode } from \"./function-parsing.js\";\r\nimport { logoChoice, сleanTheTag, addLogoName, modifietOff, set, ports, set2 } from \"../Components/function-row.js\";\r\nimport { constructorlabelCode, numberTagsBack } from \"./function-constructor-code.js\";\r\nimport { controlGetAutoPrint } from \"./Sections/User/function-user-section.js\";\r\nimport { closeError } from \"./Alert-Errors/function-error.js\";\r\n//! Функции отвечающие за работу с Бекендом\r\n//* \r\nexport async function definition(codelabel) {\r\n    let top;\r\n    let left;\r\n    let strCod;\r\n    let xName;\r\n    let xPosition;\r\n    let stringCode = /\\^FO\\w+?.*?\\^FS/m.exec(codelabel)[0];                                      //? Вырезаем строку\r\n    if (stringCode.includes('^GFA')) {                                                           //? Проверяем на наличие ^GFA в строке\r\n        //* Распарсим позицию логотипа\r\n        [strCod, top, left] = parsingLogo(stringCode);\r\n        let objectNameRotation = await fetchNameLogo(strCod);\r\n        xName = objectNameRotation.name;                                                        //? Имя логотипа\r\n        xPosition = objectNameRotation.rotation;                                                //? Позиция поворота логотипа\r\n        if (xPosition === '0') {                                                                //? Определяем поворот логотипа\r\n            xPosition = 'rotate(0deg)';\r\n        } else if (xPosition === '90') {\r\n            xPosition = 'rotate(90deg)';\r\n        } else if (xPosition === '180') {\r\n            xPosition = 'rotate(180deg)';\r\n        } else if (xPosition === '270') {\r\n            xPosition = 'rotate(270deg)';\r\n        } else {\r\n            xPosition = 'rotate(0deg)';\r\n        };\r\n        let logoType = await logoNameBak();                                                     //? Получаем весь список имён имеющихся логотипов\r\n        for (let j = 0; j < logoType.length; j++) {                                             //? Берём каждое имя логотипа\r\n            let name = logoType[j].name;                                                        //? Берём параметр имени без номера\r\n            if (xName === name) {                                                               //? Сравниваем имена\r\n                await logoChoice(xName, xPosition, top, left);                                  //? Вызов вставки логотипа\r\n                break;\r\n            };\r\n        };\r\n        codelabel = codelabel.replace(stringCode, '');                                          //? Удаляем строку из бирки\r\n    } else if (stringCode.includes('^A@R')) {\r\n        parsingString(stringCode);                                                              //? Вызываем функцию разбора строки\r\n        codelabel = codelabel.replace(stringCode, '');                                          //? Удаляем строку из бирки\r\n    } else if (stringCode.includes('^BY')) {\r\n        parsingBarcode(stringCode);                                                             //? Вставим штрихкод\r\n        codelabel = codelabel.replace(stringCode, '');                                          //? Удаляем строку из бирки\r\n    } else {\r\n        codelabel = codelabel.replace(stringCode, '');                                          //? Удаляем строку из бирки\r\n    };\r\n    modifietOff();\r\n    return (codelabel);\r\n};\r\n//* Функция определения логотипа в бирке\r\nexport async function fetchNameLogo(strCod) {\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let stan = stanTarget();\r\n    let lnr;\r\n    try {\r\n        strCod = strCod.substr(1, 90);\r\n        lnr = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogoFromCode`,\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ body: strCod })\r\n            })\r\n        lnr = await lnr.json();\r\n    } catch (ex) {\r\n        errorText.innerText = 'Ошибка:\\nНе удалось определить логотип!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n        return;\r\n    };\r\n    closeError();\r\n    return (lnr);\r\n};\r\n//* \r\nexport async function fetchLabel(text) {\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let x;\r\n    let y;\r\n    let stan = stanTarget();\r\n    text = text + '.ini';\r\n    try {\r\n        text = encodeURI(text);\r\n        x = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/labelZebraCode?fileName=` + text, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        });\r\n        y = await x.text();\r\n    } catch {\r\n        errorText.innerText = 'Ошибка:\\nВы не получаете код Бирки!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n        return;\r\n    };\r\n    closeError();\r\n    return (y);\r\n};\r\n//* Функция запроса и получения кода бирки из бека\r\nexport async function labelCode(text) {\r\n    let codelabel = await fetchLabel(text);\r\n    сleanTheTag();                                                                                      //? Очищаем бирку\r\n    codelabel = codelabel.replace(/.*?\\^PQ/, '^PQ');\r\n    let numberOfTags = /\\^PQ\\w+?.*?\\Y/m.exec(codelabel)[0];\r\n    numberTagsBack(numberOfTags);\r\n    codelabel = codelabel.replace(/.*?\\^FO/, '^FO');                                                    //? Удаляем всё до логотипа\r\n    for (let i of codelabel) {                                                                          //? Цикл вырезки строк\r\n        if (!codelabel) {                                                                               //? Проверка на отсутствие данных и выход из цикла\r\n            break;\r\n        } else if (!codelabel.includes('^FO')) {\r\n            break;\r\n        };\r\n        codelabel = await definition(codelabel);\r\n    };\r\n};\r\n//* Функция получения из бека имён логотипов\r\nexport async function logoNameBak() {\r\n    let nameLogo;\r\n    let stan = stanTarget();\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    try {                                                                                                       //? Проверка на Критическую ошибку\r\n        nameLogo = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogosOptions`, {                       //? Получаем с бека объект имён логотипов\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n        });\r\n        nameLogo = await nameLogo.json();\r\n        addLogoName(nameLogo);\r\n    } catch (err) {\r\n        errorText.innerText = 'Ошибка:\\nВы не получаете данные о списке логотипов!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n    };\r\n    closeError();\r\n    return (nameLogo);\r\n};\r\n//* Функция запроса и получения кода логотипа из бека\r\nexport async function logoCodeRevers(firstLogo, transform) {\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let number = '0';\r\n    let logoCodeString;\r\n    if (transform === '' & transform === 'rotate(0deg)') {\r\n        number = \"0\";\r\n    } else if (transform === 'rotate(90deg)') {\r\n        number = \"90\";\r\n    } else if (transform === 'rotate(180deg)') {\r\n        number = \"180\";\r\n    } else if (transform === 'rotate(270deg)') {\r\n        number = \"270\";\r\n    };\r\n    firstLogo = firstLogo.split('logo_').join('');\r\n    let stan = stanTarget();\r\n    try {\r\n        let y = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/LogoZebraCode?fileName=` + firstLogo + '&rotation=' + number, {\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n        });\r\n        logoCodeString = await y.text();\r\n    } catch {\r\n        errorText.innerText = 'Вы не получаете данные (Код логотипа)!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n    };\r\n    closeError();\r\n    return (logoCodeString);\r\n};\r\n//* Функция определения жирности шрифта строки с бека\r\nexport function boldFont(position) {\r\n    let bold;\r\n    if (position === '^A0R,' && position === '^A0I,' && position === '^A0B,' && position === '^A0N,') {\r\n        bold = 'bolder';\r\n    } else {\r\n        bold = 'normal';\r\n    };\r\n    return (bold);\r\n};\r\n//* Функция определения Шрифта из бека\r\nexport function sizeString(size) {\r\n    if (size === '30,20') {\r\n        return (\"16px\");\r\n    } else if (size === '40,30') {\r\n        return ('18px');\r\n    } else if (size === '50,40') {\r\n        return ('20px');\r\n    } else if (size === '60,50') {\r\n        return ('22px');\r\n    } else {\r\n        return ('20px');\r\n    };\r\n};\r\n//* Функция Определения стана при загрузке(Default)\r\nexport async function defaultLabelNameStan() {\r\n    document.getElementById('350-Stan').style.background = 'red';\r\n    let stan = '350-Stan';\r\n    await labelName(stan);\r\n    await logoNameBak(stan);\r\n};\r\n//* Функция получения имён бирок из Бека\r\nexport async function labelName() {\r\n    let namelabel;\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let stan = stanTarget();\r\n    try {                                                                                              //? Проверка на Критическую ошибку\r\n        document.querySelector('.option-history').innerHTML = '';\r\n        namelabel = await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/labelsOptions`, {    //? Получаем с бека список имён\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n        });\r\n    } catch {\r\n        errorText.innerText = 'Ошибка:\\nВы не получаете данные о списке Бирок!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n        return;\r\n    };\r\n    closeError();\r\n    let label = await namelabel.json();\r\n    for (let i = 0; i < label.length; i++) {                                            //? Присвоим i каждое имя по очереди\r\n        let labelname = label[i].name;                                                  //? Берём параметр имени без номера\r\n        labelname = labelname.replace('.ini', '');\r\n        addlabelNameSelection(labelname);                                               //? Передаём в селект\r\n    };\r\n};\r\n//* Функция добавления имён Бирок в селек истории\r\nexport function addlabelNameSelection(labelname) {\r\n    let stan = stanTarget();\r\n    let ul = document.querySelector('.option-history');     //? Получаем блок списка\r\n    let li = document.createElement('li');                  //? Создаём новый элемент списка\r\n    li.className = stan;\r\n    li.appendChild(document.createTextNode(labelname));     //? Привсаиваем ему значение\r\n    ul.appendChild(li);                                     //? Вставляем в блок списка\r\n};\r\nexport function alertAutoHandPrint() {\r\n    let stan = stanTarget();\r\n    let alertBlock = document.getElementById('alert-printAuto');\r\n    alertBlock.style.display = 'block';\r\n    if (stan === '350-Stan') {\r\n        document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 350-Стан?';\r\n    } else if (stan === '210-Stan') {\r\n        document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 210-Стан?';\r\n    } else if (stan === '212-Stan') {\r\n        document.getElementById('text-alert-printAuto').innerText = 'Отправить в автоматическую печать на 212-Стан?';\r\n    };\r\n};\r\n//* Функция Подтверждения отправки на печать ручную печать\r\nexport function alertHandPrint() {\r\n    let stan = stanTarget();\r\n    let alertBlock = document.getElementById('alert-print');\r\n    alertBlock.style.display = 'block';\r\n    if (stan === '350-Stan') {\r\n        document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 350-Стан?';\r\n    } else if (stan === '210-Stan') {\r\n        document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 210-Стан?';\r\n    } else if (stan === '212-Stan') {\r\n        document.getElementById('text-alert-print').innerText = 'Отправить в ручную печать на 212-Стан?';\r\n    };\r\n};\r\n//* Функция Авто Печати\r\nexport async function autoHandPrint() {\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let namelabel = document.getElementById('name-history-label').value;\r\n    let labelCode = await constructorlabelCode();\r\n    let stan = stanTarget();\r\n    try {\r\n        await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/ChangePattern?OnSKS=true`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ body: labelCode }),\r\n        });\r\n    } catch {\r\n        document.getElementById('text-error').innerText = 'Ошибка:\\nНе удалось отправить на печать!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n    };\r\n    let dataTime = new Date();\r\n    let controlDate = dataTime.getDate + dataTime.getMonth() + dataTime.getFullYear();\r\n    let controlTime = dataTime.getHours() + dataTime.getMinutes() + dataTime.getSeconds();\r\n    let controlAutoPrintLabel = {\r\n        Stan: stan,\r\n        NameLabel: namelabel,\r\n        Date: dataTime.toISOString(),\r\n        CodeLabel: labelCode,\r\n    };\r\n    closeError();\r\n    controlGetAutoPrint(stan, controlDate, controlTime, namelabel);\r\n};\r\n//* Функция Ручная печать\r\nexport async function handPrint() {\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    let labelCode = await constructorlabelCode();\r\n    let stan = stanTarget();\r\n    try {\r\n        await fetch(`http://10.23.${set[stan]}.${set2}:${ports}/Label/ChangePattern?OnSKS=false`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ body: labelCode }),\r\n        });\r\n    } catch {\r\n        errorText.innerText = 'Ошибка:\\nНе удалось отправить на печать!\\nОбратитесь в Службу Поддержки по номеру: 1032.';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n    };\r\n    closeError();\r\n};\r\n//* Функция Определения стана\r\nexport function stanTarget() {\r\n    let idStan;\r\n    let blockChild = document.querySelector('#Stans').children;                 //? Получим массив дочерних элементов\r\n    for (let h = 0; h < blockChild.length; h++) {\r\n        let divBlock = blockChild[h];                                           //? Возьмём один из дочерних элементов\r\n        if (divBlock.style.background === 'red') {\r\n            idStan = divBlock.id;\r\n        };\r\n    };\r\n    return (idStan);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}