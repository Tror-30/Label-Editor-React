{"ast":null,"code":"import { calculationOfIndents, modifietOn } from './function-row.js';\nimport { closeError } from './Alert-Errors/function-error.js';\n//* Функция Сдвинуть вверх\nexport function moveUp() {\n  let id = elementBorder(); //? Получаем  выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n  let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n  let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n  if (px === 0) {\n    //? Присваиваем переменной значение 1 при нуле\n    px = 1;\n  } else {}\n  ;\n  let positionNumber = Number(id.style.top.split('px').join(\"\")); //? Удаляем рх из полученой строки и преобразовываем в номер\n  let topNumber = positionNumber - px; //? Вычитаем из преобразованного значения указанное кол-во пикселей\n  if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (topNumber >= 0) {\n      let topString = String(topNumber); //? Полученное значение прообразовываем в строку\n      let top = topString + \"px\"; //? К строке добовляем рх\n      id.style.top = top; //? Возвращаем получившееся значение Элементу\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n    if (topNumber >= 0 + idWidth / 2) {\n      let topString = String(topNumber); //? Полученное значение прообразовываем в строку\n      let top = topString + \"px\"; //? К строке добовляем рх\n      id.style.top = top; //? Возвращаем получившееся значение Элементу\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  }\n  ;\n  modifietOn();\n  calculationOfIndents(id);\n}\n;\n//* Функция Сдвинуть вниз\nexport function moveDown() {\n  let id = elementBorder(); //? Получаем выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n  let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n  let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n  let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n  let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n  let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n  if (px === 0) {\n    //? Присваиваем переменной значение 1 при нуле\n    px = 1;\n  }\n  ;\n  let positionNumber = Number(id.style.top.split('px').join(\"\")); //? Удаляем рх из полученой строки и преобразовываем в номер\n  let topNumber = positionNumber + px; //? Вычитаем из преобразованного значения указанное кол-во пикселей\n  if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (topNumber + idHeidth <= topRowHeidth) {\n      //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\n      let topString = String(topNumber); //? Полученное значение приобразовываем в строку\n      let top = topString + \"px\"; //? К строке добовляем рх\n      id.style.top = top; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (topNumber + idHeidth <= topRowHeidth - idWidth / 2) {\n      //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\n      let topString = String(topNumber); //? Полученное значение приобразовываем в строку\n      let top = topString + \"px\"; //? К строке добовляем рх\n      id.style.top = top; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  }\n  ;\n  modifietOn();\n  calculationOfIndents(id);\n}\n;\n//* Функция Сдвинуть влево\nexport function moveLeft() {\n  let id = elementBorder(); //? Получаем  выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n  let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n  let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n  let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n  if (px === 0) {\n    //? Присваиваем переменной значение 1 при нуле\n    px = 1;\n  }\n  ;\n  let positionNumber = Number(id.style.left.split('px').join(\"\")); //? Удаляем рх из полученой строки и приобразовываем в номер\n  let leftNumber = positionNumber - px; //? Вычитаем из приобразованного значения указанное кол-во пикселей\n  if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (leftNumber >= 0) {\n      let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n      let left = leftString + \"px\"; //? К строке добовляем рх\n      id.style.left = left; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (leftNumber >= 0 - idWidth / 2 + idHeidth / 2) {\n      let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n      let left = leftString + \"px\"; //? К строке добовляем рх\n      id.style.left = left; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  }\n  ;\n  modifietOn();\n  calculationOfIndents(id);\n}\n;\n//* Функция Сдвинуть вправо\nexport function moveRight() {\n  let id = elementBorder(); //? Получаем  выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n  let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n  let idWidth = Number(id.offsetWidth); //? Получаем наружную ширину выделенного блока\n  let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n  let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n  let px = Number(document.getElementById('inpud-pixel').value); //? Получение значения Пиксилей для перемещения\n  if (px === 0) {\n    //? Присваиваем переменной значение 1 при нуле\n    px = 1;\n  }\n  ;\n  let positionLeft = id.style.left; //? Получаем значение стиля выделенного элемента\n  let positionNumber = Number(positionLeft.split('px').join(\"\")); //? Удаляем рх из полученой строки и приобразовываем в номер\n  let leftNumber = positionNumber + px; //? Прибавляем приобразованному значению указанное кол-во пикселей\n  if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (leftNumber + idWidth <= topRowWidth) {\n      //? \n      let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n      let left = leftString + \"px\"; //? К строке добовляем рх\n      id.style.left = left; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n    //? Сравниваем полученный Трансформ\n    if (leftNumber + idWidth <= topRowWidth + (idWidth / 2 - idHeidth / 2)) {\n      let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n      let left = leftString + \"px\"; //? К строке добовляем рх\n      id.style.left = left; //? Возвращаем получившееся значение Элементу\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  }\n  ;\n  modifietOn();\n  calculationOfIndents(id);\n}\n;\n//* Функция Повернуть Вправо\nexport function turnRight() {\n  let id = elementBorder(); //? Получили выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n  let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n  let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n  let idHeight = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n  let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n  let idStyleTop = Number(id.style.top.split('px').join(\"\"));\n  let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\n  let trans = id.style.transform;\n  modifietOn();\n  if (idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight && idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2) {\n    if (trans === \"rotate(0deg)\") {\n      id.style.transform = 'rotate(90deg)';\n    } else if (trans === 'rotate(90deg)') {\n      id.style.transform = 'rotate(180deg)';\n    } else if (trans === 'rotate(180deg)') {\n      id.style.transform = 'rotate(270deg)';\n    } else if (trans === 'rotate(270deg)') {\n      id.style.transform = 'rotate(0deg)';\n    } else {\n      id.style.transform = 'rotate(0deg)';\n    }\n    ;\n    error.style.display = 'none';\n  } else {\n    errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n    setTimeout(closeError, 5000);\n  }\n  ;\n}\n;\n//* Функция Повернуть Влево\nexport function turnLeft() {\n  let id = elementBorder(); //? Получили выделенный Элемент\n  let error = document.getElementById('errors');\n  let errorText = document.getElementById('text-error');\n  if (!id) return; //? Условие если нет элемента выйти из функции\n  let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n  let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n  let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n  let idHeight = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n  let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n  let idStyleTop = Number(id.style.top.split('px').join(\"\"));\n  let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\n  let trans = id.style.transform;\n  modifietOn();\n  if (idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight && idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2) {\n    if (trans === \"rotate(0deg)\") {\n      id.style.transform = 'rotate(270deg)';\n    } else if (trans === 'rotate(270deg)') {\n      id.style.transform = 'rotate(180deg)';\n    } else if (trans === 'rotate(180deg)') {\n      id.style.transform = 'rotate(90deg)';\n    } else if (trans === 'rotate(90deg)') {\n      id.style.transform = 'rotate(0deg)';\n    } else {\n      id.style.transform = 'rotate(0deg)';\n    }\n    ;\n    error.style.display = 'none';\n  } else {\n    errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n    errorText.style.display = 'block';\n    error.style.display = 'block';\n    setTimeout(closeError, 5000);\n  }\n  ;\n}\n;\n//* Функция получения выделеного элемента\nexport function elementBorder() {\n  let rowDivBlock = document.getElementById('label-borders').children; //? Получаем МАССИВ дочерних элементов дива\n  let borderedItem;\n  for (let id of rowDivBlock) {\n    if (id.style.border === \"1px solid black\") {\n      //? Проверка элементов на наличие стиля бордер\n      borderedItem = id;\n    } else {}\n    ;\n  }\n  ;\n  return borderedItem;\n}\n;\n//* Функция сброса выделения\nexport function resetSelection() {\n  let rowDivBlock = document.getElementById('label-borders'); //? Получение родительского блока\n  //? Снимем выделение со всех элементов\n  if (rowDivBlock.hasChildNodes()) {\n    let children = rowDivBlock.children;\n    for (let i = 0; i < children.length; ++i) {\n      children[i].style.border = '0px';\n      document.getElementById('editor-text-string').value = '';\n      document.getElementById('add-string').innerText = \"Добавить\";\n    }\n    ;\n  }\n  ;\n  document.getElementById('input-padding-bottom').value = '';\n  document.getElementById('input-padding-left').value = '';\n}\n;","map":{"version":3,"names":["calculationOfIndents","modifietOn","closeError","moveUp","id","elementBorder","error","document","getElementById","errorText","idWidth","Number","offsetWidth","idTrans","style","transform","px","value","positionNumber","top","split","join","topNumber","topString","String","innerText","display","setTimeout","moveDown","rowBlock","topRowHeidth","clientHeight","idHeidth","offsetHeight","moveLeft","left","leftNumber","leftString","moveRight","topRowWidth","clientWidth","positionLeft","turnRight","idHeight","idStyleTop","idStyleLeft","trans","turnLeft","rowDivBlock","children","borderedItem","border","resetSelection","hasChildNodes","i","length"],"sources":["C:/Users/Tror/Desktop/Project/Label-Editor-React/src/Components/function-move-elem.js"],"sourcesContent":["import { calculationOfIndents, modifietOn } from './function-row.js';\r\nimport { closeError } from './Alert-Errors/function-error.js';\r\n//* Функция Сдвинуть вверх\r\nexport function moveUp() {\r\n    let id = elementBorder();                                                               //? Получаем  выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                        //? Условие если нет элемента выйти из функции\r\n    let idWidth = Number(id.offsetWidth);                                                   //? Получаем длину выделенного блока\r\n    let idTrans = id.style.transform;                                                       //? Получаем значение трашсформ выделенного блока\r\n    let px = Number(document.getElementById('inpud-pixel').value);                          //? Преобразование указанного значения пикселей из строки в номер\r\n    if (px === 0) {                                                                         //? Присваиваем переменной значение 1 при нуле\r\n        px = 1;\r\n    } else { };\r\n    let positionNumber = Number(id.style.top.split('px').join(\"\"));                         //? Удаляем рх из полученой строки и преобразовываем в номер\r\n    let topNumber = positionNumber - px;                                                    //? Вычитаем из преобразованного значения указанное кол-во пикселей\r\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                       //? Сравниваем полученный Трансформ\r\n        if (topNumber >= 0) {\r\n            let topString = String(topNumber);                                              //? Полученное значение прообразовываем в строку\r\n            let top = topString + \"px\";                                                     //? К строке добовляем рх\r\n            id.style.top = top;                                                             //? Возвращаем получившееся значение Элементу\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\r\n        if (topNumber >= 0 + idWidth / 2) {\r\n            let topString = String(topNumber);                                              //? Полученное значение прообразовываем в строку\r\n            let top = topString + \"px\";                                                     //? К строке добовляем рх\r\n            id.style.top = top;                                                             //? Возвращаем получившееся значение Элементу\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    };\r\n    modifietOn();\r\n    calculationOfIndents(id);\r\n};\r\n//* Функция Сдвинуть вниз\r\nexport function moveDown() {\r\n    let id = elementBorder();                                                       //? Получаем выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n    let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n    let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n    let idTrans = id.style.transform;                                               //? Получаем значение трашсформ выделенного блока\r\n    let idHeidth = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n    let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n    let px = Number(document.getElementById('inpud-pixel').value);                  //? Преобразование указанного значения пикселей из строки в номер\r\n    if (px === 0) {                                                                 //? Присваиваем переменной значение 1 при нуле\r\n        px = 1;\r\n    };\r\n    let positionNumber = Number(id.style.top.split('px').join(\"\"));                 //? Удаляем рх из полученой строки и преобразовываем в номер\r\n    let topNumber = positionNumber + px;                                            //? Вычитаем из преобразованного значения указанное кол-во пикселей\r\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {               //? Сравниваем полученный Трансформ\r\n        if (topNumber + idHeidth <= topRowHeidth) {                                 //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\r\n            let topString = String(topNumber);                                      //? Полученное значение приобразовываем в строку\r\n            let top = topString + \"px\";                                             //? К строке добовляем рх\r\n            id.style.top = top;                                                     //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {       //? Сравниваем полученный Трансформ\r\n        if (topNumber + idHeidth <= topRowHeidth - idWidth / 2) {                   //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\r\n            let topString = String(topNumber);                                      //? Полученное значение приобразовываем в строку\r\n            let top = topString + \"px\";                                             //? К строке добовляем рх\r\n            id.style.top = top;                                                     //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    };\r\n    modifietOn();\r\n    calculationOfIndents(id);\r\n};\r\n//* Функция Сдвинуть влево\r\nexport function moveLeft() {\r\n    let id = elementBorder();                                                       //? Получаем  выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n    let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n    let idHeidth = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n    let idTrans = id.style.transform;                                               //? Получаем значение трашсформ выделенного блока\r\n    let px = Number(document.getElementById('inpud-pixel').value);                  //? Преобразование указанного значения пикселей из строки в номер\r\n    if (px === 0) {                                                                 //? Присваиваем переменной значение 1 при нуле\r\n        px = 1;\r\n    };\r\n    let positionNumber = Number(id.style.left.split('px').join(\"\"));                //? Удаляем рх из полученой строки и приобразовываем в номер\r\n    let leftNumber = positionNumber - px;                                           //? Вычитаем из приобразованного значения указанное кол-во пикселей\r\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                           //? Сравниваем полученный Трансформ\r\n        if (leftNumber >= 0) {\r\n            let leftString = String(leftNumber);                                    //? Полученное значение приобразовываем в строку\r\n            let left = leftString + \"px\";                                           //? К строке добовляем рх\r\n            id.style.left = left;                                                   //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {       //? Сравниваем полученный Трансформ\r\n        if (leftNumber >= 0 - idWidth / 2 + idHeidth / 2) {\r\n            let leftString = String(leftNumber);                                    //? Полученное значение приобразовываем в строку\r\n            let left = leftString + \"px\";                                           //? К строке добовляем рх\r\n            id.style.left = left;                                                   //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    };\r\n    modifietOn();\r\n    calculationOfIndents(id);\r\n};\r\n//* Функция Сдвинуть вправо\r\nexport function moveRight() {\r\n    let id = elementBorder();                                                                       //? Получаем  выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                                //? Условие если нет элемента выйти из функции\r\n    let rowBlock = document.getElementById(\"label-borders\");                                        //? Получаем родительский блок\r\n    let topRowWidth = Number(rowBlock.clientWidth);                                                 //? Получаем внутреннюю ширину родительского элемента\r\n    let idWidth = Number(id.offsetWidth);                                                           //? Получаем наружную ширину выделенного блока\r\n    let idTrans = id.style.transform;                                                               //? Получаем значение трашсформ выделенного блока\r\n    let idHeidth = Number(id.offsetHeight);                                                         //? Получаем наружную высоту выделенного блока\r\n    let px = Number(document.getElementById('inpud-pixel').value);                                  //? Получение значения Пиксилей для перемещения\r\n    if (px === 0) {                                                                                 //? Присваиваем переменной значение 1 при нуле\r\n        px = 1;\r\n    };\r\n    let positionLeft = id.style.left;                                                               //? Получаем значение стиля выделенного элемента\r\n    let positionNumber = Number(positionLeft.split('px').join(\"\"));                                 //? Удаляем рх из полученой строки и приобразовываем в номер\r\n    let leftNumber = positionNumber + px;                                                           //? Прибавляем приобразованному значению указанное кол-во пикселей\r\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                                           //? Сравниваем полученный Трансформ\r\n        if (leftNumber + idWidth <= topRowWidth) {                                                  //? \r\n            let leftString = String(leftNumber);                                                    //? Полученное значение приобразовываем в строку\r\n            let left = leftString + \"px\";                                                           //? К строке добовляем рх\r\n            id.style.left = left;                                                                   //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {                       //? Сравниваем полученный Трансформ\r\n        if ((leftNumber + idWidth) <= topRowWidth + ((idWidth / 2) - (idHeidth / 2))) {\r\n            let leftString = String(leftNumber);                                                    //? Полученное значение приобразовываем в строку\r\n            let left = leftString + \"px\";                                                           //? К строке добовляем рх\r\n            id.style.left = left;                                                                   //? Возвращаем получившееся значение Элементу\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    };\r\n    modifietOn();\r\n    calculationOfIndents(id);\r\n};\r\n//* Функция Повернуть Вправо\r\nexport function turnRight() {\r\n    let id = elementBorder();                                                       //? Получили выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n    let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n    let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n    let topRowWidth = Number(rowBlock.clientWidth);                                 //? Получаем внутреннюю ширину родительского элемента\r\n    let idHeight = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n    let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n    let idStyleTop = Number(id.style.top.split('px').join(\"\"));\r\n    let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\r\n    let trans = id.style.transform;\r\n    modifietOn();\r\n    if ((idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight) && (idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2)) {\r\n        if (trans === \"rotate(0deg)\") {\r\n            id.style.transform = 'rotate(90deg)';\r\n        } else if (trans === 'rotate(90deg)') {\r\n            id.style.transform = 'rotate(180deg)';\r\n        } else if (trans === 'rotate(180deg)') {\r\n            id.style.transform = 'rotate(270deg)';\r\n        } else if (trans === 'rotate(270deg)') {\r\n            id.style.transform = 'rotate(0deg)';\r\n        } else {\r\n            id.style.transform = 'rotate(0deg)';\r\n        };\r\n        error.style.display = 'none';\r\n    } else {\r\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n        setTimeout(closeError, 5000);\r\n    };\r\n};\r\n//* Функция Повернуть Влево\r\nexport function turnLeft() {\r\n    let id = elementBorder();                                                       //? Получили выделенный Элемент\r\n    let error = document.getElementById('errors');\r\n    let errorText = document.getElementById('text-error');\r\n    if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n    let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n    let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n    let topRowWidth = Number(rowBlock.clientWidth);                                 //? Получаем внутреннюю ширину родительского элемента\r\n    let idHeight = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n    let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n    let idStyleTop = Number(id.style.top.split('px').join(\"\"));\r\n    let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\r\n    let trans = id.style.transform;\r\n    modifietOn();\r\n    if ((idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight) && (idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2)) {\r\n        if (trans === \"rotate(0deg)\") {\r\n            id.style.transform = 'rotate(270deg)';\r\n        } else if (trans === 'rotate(270deg)') {\r\n            id.style.transform = 'rotate(180deg)';\r\n        } else if (trans === 'rotate(180deg)') {\r\n            id.style.transform = 'rotate(90deg)';\r\n        } else if (trans === 'rotate(90deg)') {\r\n            id.style.transform = 'rotate(0deg)';\r\n        } else {\r\n            id.style.transform = 'rotate(0deg)';\r\n        };\r\n        error.style.display = 'none';\r\n    } else {\r\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n        errorText.style.display = 'block';\r\n        error.style.display = 'block';\r\n        setTimeout(closeError, 5000);\r\n    };\r\n};\r\n//* Функция получения выделеного элемента\r\nexport function elementBorder() {\r\n    let rowDivBlock = document.getElementById('label-borders').children;                                //? Получаем МАССИВ дочерних элементов дива\r\n    let borderedItem;\r\n    for (let id of rowDivBlock) {\r\n        if (id.style.border === \"1px solid black\") {                                                    //? Проверка элементов на наличие стиля бордер\r\n            borderedItem = id;\r\n        } else {\r\n\r\n        };\r\n    };\r\n    return (borderedItem);\r\n};\r\n//* Функция сброса выделения\r\nexport function resetSelection() {\r\n    let rowDivBlock = document.getElementById('label-borders');                     //? Получение родительского блока\r\n    //? Снимем выделение со всех элементов\r\n    if (rowDivBlock.hasChildNodes()) {\r\n        let children = rowDivBlock.children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            children[i].style.border = '0px';\r\n            document.getElementById('editor-text-string').value = '';\r\n            document.getElementById('add-string').innerText = \"Добавить\";\r\n        };\r\n    };\r\n    document.getElementById('input-padding-bottom').value = '';\r\n    document.getElementById('input-padding-left').value = '';\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}