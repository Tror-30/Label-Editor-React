{"ast":null,"code":"import { calculationOfIndents, modifietOn } from './function-row.js';\nconst moveElements = {\n  //* Функция Сдвинуть вверх\n  moveUp() {\n    let id = elementBorder(); //? Получаем  выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n    let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n    let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n    if (px === 0) {\n      //? Присваиваем переменной значение 1 при нуле\n      px = 1;\n    } else {}\n    ;\n    let positionNumber = Number(id.style.top.split('px').join(\"\")); //? Удаляем рх из полученой строки и преобразовываем в номер\n    let topNumber = positionNumber - px; //? Вычитаем из преобразованного значения указанное кол-во пикселей\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (topNumber >= 0) {\n        let topString = String(topNumber); //? Полученное значение прообразовываем в строку\n        let top = topString + \"px\"; //? К строке добовляем рх\n        id.style.top = top; //? Возвращаем получившееся значение Элементу\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n      if (topNumber >= 0 + idWidth / 2) {\n        let topString = String(topNumber); //? Полученное значение прообразовываем в строку\n        let top = topString + \"px\"; //? К строке добовляем рх\n        id.style.top = top; //? Возвращаем получившееся значение Элементу\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    }\n    ;\n    modifietOn();\n    calculationOfIndents(id);\n  },\n  //* Функция Сдвинуть вниз\n  moveDown() {\n    let id = elementBorder(); //? Получаем выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n    let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n    let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n    let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n    let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n    let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n    if (px === 0) {\n      //? Присваиваем переменной значение 1 при нуле\n      px = 1;\n    }\n    ;\n    let positionNumber = Number(id.style.top.split('px').join(\"\")); //? Удаляем рх из полученой строки и преобразовываем в номер\n    let topNumber = positionNumber + px; //? Вычитаем из преобразованного значения указанное кол-во пикселей\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (topNumber + idHeidth <= topRowHeidth) {\n        //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\n        let topString = String(topNumber); //? Полученное значение приобразовываем в строку\n        let top = topString + \"px\"; //? К строке добовляем рх\n        id.style.top = top; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (topNumber + idHeidth <= topRowHeidth - idWidth / 2) {\n        //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\n        let topString = String(topNumber); //? Полученное значение приобразовываем в строку\n        let top = topString + \"px\"; //? К строке добовляем рх\n        id.style.top = top; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    }\n    ;\n    modifietOn();\n    calculationOfIndents(id);\n  },\n  //* Функция Сдвинуть влево\n  moveLeft() {\n    let id = elementBorder(); //? Получаем  выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n    let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n    let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n    let px = Number(document.getElementById('inpud-pixel').value); //? Преобразование указанного значения пикселей из строки в номер\n    if (px === 0) {\n      //? Присваиваем переменной значение 1 при нуле\n      px = 1;\n    }\n    ;\n    let positionNumber = Number(id.style.left.split('px').join(\"\")); //? Удаляем рх из полученой строки и приобразовываем в номер\n    let leftNumber = positionNumber - px; //? Вычитаем из приобразованного значения указанное кол-во пикселей\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (leftNumber >= 0) {\n        let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n        let left = leftString + \"px\"; //? К строке добовляем рх\n        id.style.left = left; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (leftNumber >= 0 - idWidth / 2 + idHeidth / 2) {\n        let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n        let left = leftString + \"px\"; //? К строке добовляем рх\n        id.style.left = left; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    }\n    ;\n    modifietOn();\n    calculationOfIndents(id);\n  },\n  //* Функция Сдвинуть вправо\n  moveRight() {\n    let id = elementBorder(); //? Получаем  выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n    let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n    let idWidth = Number(id.offsetWidth); //? Получаем наружную ширину выделенного блока\n    let idTrans = id.style.transform; //? Получаем значение трашсформ выделенного блока\n    let idHeidth = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n    let px = Number(document.getElementById('inpud-pixel').value); //? Получение значения Пиксилей для перемещения\n    if (px === 0) {\n      //? Присваиваем переменной значение 1 при нуле\n      px = 1;\n    }\n    ;\n    let positionLeft = id.style.left; //? Получаем значение стиля выделенного элемента\n    let positionNumber = Number(positionLeft.split('px').join(\"\")); //? Удаляем рх из полученой строки и приобразовываем в номер\n    let leftNumber = positionNumber + px; //? Прибавляем приобразованному значению указанное кол-во пикселей\n    if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (leftNumber + idWidth <= topRowWidth) {\n        //? \n        let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n        let left = leftString + \"px\"; //? К строке добовляем рх\n        id.style.left = left; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\n      //? Сравниваем полученный Трансформ\n      if (leftNumber + idWidth <= topRowWidth + (idWidth / 2 - idHeidth / 2)) {\n        let leftString = String(leftNumber); //? Полученное значение приобразовываем в строку\n        let left = leftString + \"px\"; //? К строке добовляем рх\n        id.style.left = left; //? Возвращаем получившееся значение Элементу\n        error.style.display = 'none';\n      } else {\n        errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n        errorText.style.display = 'block';\n        error.style.display = 'block';\n        setTimeout(closeError, 5000);\n      }\n      ;\n    }\n    ;\n    modifietOn();\n    calculationOfIndents(id);\n  },\n  //* Функция Повернуть Вправо\n  turnRight() {\n    let id = elementBorder(); //? Получили выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n    let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n    let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n    let idHeight = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n    let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n    let idStyleTop = Number(id.style.top.split('px').join(\"\"));\n    let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\n    let trans = id.style.transform;\n    modifietOn();\n    if (idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight && idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2) {\n      if (trans === \"rotate(0deg)\") {\n        id.style.transform = 'rotate(90deg)';\n      } else if (trans === 'rotate(90deg)') {\n        id.style.transform = 'rotate(180deg)';\n      } else if (trans === 'rotate(180deg)') {\n        id.style.transform = 'rotate(270deg)';\n      } else if (trans === 'rotate(270deg)') {\n        id.style.transform = 'rotate(0deg)';\n      } else {\n        id.style.transform = 'rotate(0deg)';\n      }\n      ;\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  },\n  //* Функция Повернуть Влево\n  turnLeft() {\n    let id = elementBorder(); //? Получили выделенный Элемент\n    let error = document.getElementById('errors');\n    let errorText = document.getElementById('text-error');\n    if (!id) return; //? Условие если нет элемента выйти из функции\n    let rowBlock = document.getElementById(\"label-borders\"); //? Получаем родительский блок\n    let topRowHeidth = Number(rowBlock.clientHeight); //? Получаем внутреннюю высоту родительского элемента\n    let topRowWidth = Number(rowBlock.clientWidth); //? Получаем внутреннюю ширину родительского элемента\n    let idHeight = Number(id.offsetHeight); //? Получаем наружную высоту выделенного блока\n    let idWidth = Number(id.offsetWidth); //? Получаем длину выделенного блока\n    let idStyleTop = Number(id.style.top.split('px').join(\"\"));\n    let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\n    let trans = id.style.transform;\n    modifietOn();\n    if (idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight && idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2) {\n      if (trans === \"rotate(0deg)\") {\n        id.style.transform = 'rotate(270deg)';\n      } else if (trans === 'rotate(270deg)') {\n        id.style.transform = 'rotate(180deg)';\n      } else if (trans === 'rotate(180deg)') {\n        id.style.transform = 'rotate(90deg)';\n      } else if (trans === 'rotate(90deg)') {\n        id.style.transform = 'rotate(0deg)';\n      } else {\n        id.style.transform = 'rotate(0deg)';\n      }\n      ;\n      error.style.display = 'none';\n    } else {\n      errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\n      errorText.style.display = 'block';\n      error.style.display = 'block';\n      setTimeout(closeError, 5000);\n    }\n    ;\n  },\n  //* Функция получения выделеного элемента\n  elementBorder() {\n    let rowDivBlock = document.getElementById('label-borders').children; //? Получаем МАССИВ дочерних элементов дива\n    let borderedItem;\n    for (let id of rowDivBlock) {\n      if (id.style.border === \"1px solid black\") {\n        //? Проверка элементов на наличие стиля бордер\n        borderedItem = id;\n      } else {}\n      ;\n    }\n    ;\n    return borderedItem;\n  },\n  //* Функция сброса выделения\n  resetSelection() {\n    let rowDivBlock = document.getElementById('label-borders'); //? Получение родительского блока\n    //? Снимем выделение со всех элементов\n    if (rowDivBlock.hasChildNodes()) {\n      let children = rowDivBlock.children;\n      for (let i = 0; i < children.length; ++i) {\n        children[i].style.border = '0px';\n        document.getElementById('editor-text-string').value = '';\n        document.getElementById('add-string').innerText = \"Добавить\";\n      }\n      ;\n    }\n    ;\n    document.getElementById('input-padding-bottom').value = '';\n    document.getElementById('input-padding-left').value = '';\n  }\n};\nexport const resetSelection = moveElements.resetSelection;\nexport const elementBorder = moveElements.elementBorder;\nexport const moveUp = moveElements.moveUp;\nexport const moveDown = moveElements.moveDown;\nexport const moveLeft = moveElements.moveLeft;\nexport const moveRight = moveElements.moveRight;\nexport const turnRight = moveElements.turnRight;\nexport const turnLeft = moveElements.turnLeft;","map":{"version":3,"names":["calculationOfIndents","modifietOn","moveElements","moveUp","id","elementBorder","error","document","getElementById","errorText","idWidth","Number","offsetWidth","idTrans","style","transform","px","value","positionNumber","top","split","join","topNumber","topString","String","innerText","display","setTimeout","closeError","moveDown","rowBlock","topRowHeidth","clientHeight","idHeidth","offsetHeight","moveLeft","left","leftNumber","leftString","moveRight","topRowWidth","clientWidth","positionLeft","turnRight","idHeight","idStyleTop","idStyleLeft","trans","turnLeft","rowDivBlock","children","borderedItem","border","resetSelection","hasChildNodes","i","length"],"sources":["C:/Users/Tror/Desktop/Project/Label-Editor-React/src/Components/function-move-elem.js"],"sourcesContent":["import { calculationOfIndents, modifietOn } from './function-row.js';\r\n\r\n\r\nconst moveElements = {\r\n    //* Функция Сдвинуть вверх\r\n    moveUp() {\r\n        let id = elementBorder();                                                               //? Получаем  выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                        //? Условие если нет элемента выйти из функции\r\n        let idWidth = Number(id.offsetWidth);                                                   //? Получаем длину выделенного блока\r\n        let idTrans = id.style.transform;                                                       //? Получаем значение трашсформ выделенного блока\r\n        let px = Number(document.getElementById('inpud-pixel').value);                          //? Преобразование указанного значения пикселей из строки в номер\r\n        if (px === 0) {                                                                         //? Присваиваем переменной значение 1 при нуле\r\n            px = 1;\r\n        } else { };\r\n        let positionNumber = Number(id.style.top.split('px').join(\"\"));                         //? Удаляем рх из полученой строки и преобразовываем в номер\r\n        let topNumber = positionNumber - px;                                                    //? Вычитаем из преобразованного значения указанное кол-во пикселей\r\n        if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                       //? Сравниваем полученный Трансформ\r\n            if (topNumber >= 0) {\r\n                let topString = String(topNumber);                                              //? Полученное значение прообразовываем в строку\r\n                let top = topString + \"px\";                                                     //? К строке добовляем рх\r\n                id.style.top = top;                                                             //? Возвращаем получившееся значение Элементу\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {\r\n            if (topNumber >= 0 + idWidth / 2) {\r\n                let topString = String(topNumber);                                              //? Полученное значение прообразовываем в строку\r\n                let top = topString + \"px\";                                                     //? К строке добовляем рх\r\n                id.style.top = top;                                                             //? Возвращаем получившееся значение Элементу\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        };\r\n        modifietOn();\r\n        calculationOfIndents(id);\r\n    },\r\n    //* Функция Сдвинуть вниз\r\n    moveDown() {\r\n        let id = elementBorder();                                                       //? Получаем выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n        let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n        let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n        let idTrans = id.style.transform;                                               //? Получаем значение трашсформ выделенного блока\r\n        let idHeidth = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n        let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n        let px = Number(document.getElementById('inpud-pixel').value);                  //? Преобразование указанного значения пикселей из строки в номер\r\n        if (px === 0) {                                                                 //? Присваиваем переменной значение 1 при нуле\r\n            px = 1;\r\n        };\r\n        let positionNumber = Number(id.style.top.split('px').join(\"\"));                 //? Удаляем рх из полученой строки и преобразовываем в номер\r\n        let topNumber = positionNumber + px;                                            //? Вычитаем из преобразованного значения указанное кол-во пикселей\r\n        if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {               //? Сравниваем полученный Трансформ\r\n            if (topNumber + idHeidth <= topRowHeidth) {                                 //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\r\n                let topString = String(topNumber);                                      //? Полученное значение приобразовываем в строку\r\n                let top = topString + \"px\";                                             //? К строке добовляем рх\r\n                id.style.top = top;                                                     //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {       //? Сравниваем полученный Трансформ\r\n            if (topNumber + idHeidth <= topRowHeidth - idWidth / 2) {                   //? Позиция элемента плюс его высота должна быть не более или равна внутренней высоте родительского элемента\r\n                let topString = String(topNumber);                                      //? Полученное значение приобразовываем в строку\r\n                let top = topString + \"px\";                                             //? К строке добовляем рх\r\n                id.style.top = top;                                                     //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        };\r\n        modifietOn();\r\n        calculationOfIndents(id);\r\n    },\r\n    //* Функция Сдвинуть влево\r\n    moveLeft() {\r\n        let id = elementBorder();                                                       //? Получаем  выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n        let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n        let idHeidth = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n        let idTrans = id.style.transform;                                               //? Получаем значение трашсформ выделенного блока\r\n        let px = Number(document.getElementById('inpud-pixel').value);                  //? Преобразование указанного значения пикселей из строки в номер\r\n        if (px === 0) {                                                                 //? Присваиваем переменной значение 1 при нуле\r\n            px = 1;\r\n        };\r\n        let positionNumber = Number(id.style.left.split('px').join(\"\"));                //? Удаляем рх из полученой строки и приобразовываем в номер\r\n        let leftNumber = positionNumber - px;                                           //? Вычитаем из приобразованного значения указанное кол-во пикселей\r\n        if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                           //? Сравниваем полученный Трансформ\r\n            if (leftNumber >= 0) {\r\n                let leftString = String(leftNumber);                                    //? Полученное значение приобразовываем в строку\r\n                let left = leftString + \"px\";                                           //? К строке добовляем рх\r\n                id.style.left = left;                                                   //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {       //? Сравниваем полученный Трансформ\r\n            if (leftNumber >= 0 - idWidth / 2 + idHeidth / 2) {\r\n                let leftString = String(leftNumber);                                    //? Полученное значение приобразовываем в строку\r\n                let left = leftString + \"px\";                                           //? К строке добовляем рх\r\n                id.style.left = left;                                                   //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        };\r\n        modifietOn();\r\n        calculationOfIndents(id);\r\n    },\r\n    //* Функция Сдвинуть вправо\r\n    moveRight() {\r\n        let id = elementBorder();                                                                       //? Получаем  выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                                //? Условие если нет элемента выйти из функции\r\n        let rowBlock = document.getElementById(\"label-borders\");                                        //? Получаем родительский блок\r\n        let topRowWidth = Number(rowBlock.clientWidth);                                                 //? Получаем внутреннюю ширину родительского элемента\r\n        let idWidth = Number(id.offsetWidth);                                                           //? Получаем наружную ширину выделенного блока\r\n        let idTrans = id.style.transform;                                                               //? Получаем значение трашсформ выделенного блока\r\n        let idHeidth = Number(id.offsetHeight);                                                         //? Получаем наружную высоту выделенного блока\r\n        let px = Number(document.getElementById('inpud-pixel').value);                                  //? Получение значения Пиксилей для перемещения\r\n        if (px === 0) {                                                                                 //? Присваиваем переменной значение 1 при нуле\r\n            px = 1;\r\n        };\r\n        let positionLeft = id.style.left;                                                               //? Получаем значение стиля выделенного элемента\r\n        let positionNumber = Number(positionLeft.split('px').join(\"\"));                                 //? Удаляем рх из полученой строки и приобразовываем в номер\r\n        let leftNumber = positionNumber + px;                                                           //? Прибавляем приобразованному значению указанное кол-во пикселей\r\n        if (idTrans === \"rotate(0deg)\" || idTrans === \"rotate(180deg)\") {                                           //? Сравниваем полученный Трансформ\r\n            if (leftNumber + idWidth <= topRowWidth) {                                                  //? \r\n                let leftString = String(leftNumber);                                                    //? Полученное значение приобразовываем в строку\r\n                let left = leftString + \"px\";                                                           //? К строке добовляем рх\r\n                id.style.left = left;                                                                   //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        } else if (idTrans === \"rotate(90deg)\" || idTrans === \"rotate(270deg)\") {                       //? Сравниваем полученный Трансформ\r\n            if ((leftNumber + idWidth) <= topRowWidth + ((idWidth / 2) - (idHeidth / 2))) {\r\n                let leftString = String(leftNumber);                                                    //? Полученное значение приобразовываем в строку\r\n                let left = leftString + \"px\";                                                           //? К строке добовляем рх\r\n                id.style.left = left;                                                                   //? Возвращаем получившееся значение Элементу\r\n                error.style.display = 'none';\r\n            } else {\r\n                errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n                errorText.style.display = 'block';\r\n                error.style.display = 'block';\r\n                setTimeout(closeError, 5000);\r\n            };\r\n        };\r\n        modifietOn();\r\n        calculationOfIndents(id);\r\n    },\r\n    //* Функция Повернуть Вправо\r\n    turnRight() {\r\n        let id = elementBorder();                                                       //? Получили выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n        let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n        let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n        let topRowWidth = Number(rowBlock.clientWidth);                                 //? Получаем внутреннюю ширину родительского элемента\r\n        let idHeight = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n        let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n        let idStyleTop = Number(id.style.top.split('px').join(\"\"));\r\n        let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\r\n        let trans = id.style.transform;\r\n        modifietOn();\r\n        if ((idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight) && (idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2)) {\r\n            if (trans === \"rotate(0deg)\") {\r\n                id.style.transform = 'rotate(90deg)';\r\n            } else if (trans === 'rotate(90deg)') {\r\n                id.style.transform = 'rotate(180deg)';\r\n            } else if (trans === 'rotate(180deg)') {\r\n                id.style.transform = 'rotate(270deg)';\r\n            } else if (trans === 'rotate(270deg)') {\r\n                id.style.transform = 'rotate(0deg)';\r\n            } else {\r\n                id.style.transform = 'rotate(0deg)';\r\n            };\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    },\r\n    //* Функция Повернуть Влево\r\n    turnLeft() {\r\n        let id = elementBorder();                                                       //? Получили выделенный Элемент\r\n        let error = document.getElementById('errors');\r\n        let errorText = document.getElementById('text-error');\r\n        if (!id) return;                                                                //? Условие если нет элемента выйти из функции\r\n        let rowBlock = document.getElementById(\"label-borders\");                        //? Получаем родительский блок\r\n        let topRowHeidth = Number(rowBlock.clientHeight);                               //? Получаем внутреннюю высоту родительского элемента\r\n        let topRowWidth = Number(rowBlock.clientWidth);                                 //? Получаем внутреннюю ширину родительского элемента\r\n        let idHeight = Number(id.offsetHeight);                                         //? Получаем наружную высоту выделенного блока\r\n        let idWidth = Number(id.offsetWidth);                                           //? Получаем длину выделенного блока\r\n        let idStyleTop = Number(id.style.top.split('px').join(\"\"));\r\n        let idStyleLeft = Number(id.style.left.split('px').join(\"\"));\r\n        let trans = id.style.transform;\r\n        modifietOn();\r\n        if ((idStyleLeft > 0 && idStyleLeft < topRowWidth - idWidth - idHeight) && (idStyleTop > idWidth / 2 && idStyleTop < topRowHeidth - idWidth / 2 - idHeight / 2)) {\r\n            if (trans === \"rotate(0deg)\") {\r\n                id.style.transform = 'rotate(270deg)';\r\n            } else if (trans === 'rotate(270deg)') {\r\n                id.style.transform = 'rotate(180deg)';\r\n            } else if (trans === 'rotate(180deg)') {\r\n                id.style.transform = 'rotate(90deg)';\r\n            } else if (trans === 'rotate(90deg)') {\r\n                id.style.transform = 'rotate(0deg)';\r\n            } else {\r\n                id.style.transform = 'rotate(0deg)';\r\n            };\r\n            error.style.display = 'none';\r\n        } else {\r\n            errorText.innerText = 'Ошибка:\\nВы выходите за граници Бирки';\r\n            errorText.style.display = 'block';\r\n            error.style.display = 'block';\r\n            setTimeout(closeError, 5000);\r\n        };\r\n    },\r\n    //* Функция получения выделеного элемента\r\n    elementBorder() {\r\n        let rowDivBlock = document.getElementById('label-borders').children;                                //? Получаем МАССИВ дочерних элементов дива\r\n        let borderedItem;\r\n        for (let id of rowDivBlock) {\r\n            if (id.style.border === \"1px solid black\") {                                                    //? Проверка элементов на наличие стиля бордер\r\n                borderedItem = id;\r\n            } else {\r\n\r\n            };\r\n        };\r\n        return (borderedItem);\r\n    },\r\n    //* Функция сброса выделения\r\n    resetSelection() {\r\n        let rowDivBlock = document.getElementById('label-borders');                     //? Получение родительского блока\r\n        //? Снимем выделение со всех элементов\r\n        if (rowDivBlock.hasChildNodes()) {\r\n            let children = rowDivBlock.children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                children[i].style.border = '0px';\r\n                document.getElementById('editor-text-string').value = '';\r\n                document.getElementById('add-string').innerText = \"Добавить\";\r\n            };\r\n        };\r\n        document.getElementById('input-padding-bottom').value = '';\r\n        document.getElementById('input-padding-left').value = '';\r\n    },\r\n};\r\nexport const resetSelection = moveElements.resetSelection;\r\nexport const elementBorder = moveElements.elementBorder;\r\nexport const moveUp = moveElements.moveUp;\r\nexport const moveDown = moveElements.moveDown;\r\nexport const moveLeft = moveElements.moveLeft;\r\nexport const moveRight = moveElements.moveRight;\r\nexport const turnRight = moveElements.turnRight;\r\nexport const turnLeft = moveElements.turnLeft;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}